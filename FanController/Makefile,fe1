#!/usr/bin/env riscos-amu -f
# Makefile for FanController
#

#
# Program specific options:
#
COMPONENT  = FanController

# Specifies additional targets for startup
#INITTARGET = inittarget

# Specifies additional targets for clean
CLEANTARGET = cleantarget

# Files to export as part of export_hdr or export_libs
# To export to the standard C: path, you might use an export like:
#   ${EXP_C_H}.${COMPONENT}SWIs
# To export to the library in a subdirectory, use an export like:
#   ${EXP_LIB}.${COMPONENT}.h.myheader
EXPORTS    = ${EXP_C_H}.${COMPONENT}

# Resources you want to be exported as part of the 'resources' phase of the build
#RESOURCES  = ${RESDIR}.${COMPONENT}.Messages

# Comma-separated list of paths to use for includes, such as:
#	C:LibName.
INCLUDES   = C:Asm.

# Space separated list of libraries to link against.
# (${CLIB} is implicit, unless NOCLIB = yes)
LIBS       = C:Asm.o.libAsm

# Space separated list of defines to set, eg -DDEBUG
CDEFINES   =

# Objects to build, using the format o.<name> (will be varied for build type)
OBJS       = o.modhead \
			 o.module \
			 o.commands \
			 o.fan \
			 o.str \
			 o.fans

# Documentation source files
ifdef __crosscompile
# Docs don't build on RISC OS yet
DOCSRC = prminxml.fancontroller/xml
endif


include CModule

# Additional dependencies
$(OZDIR).module: h.modhead
$(OZDIR).commands: h.modhead

# Export rules
# For any files you export with EXPORTS you may need to include an
# export rule
#${EXP_C_H}.${COMPONENT}SWIs: cmhg.modhead
#       ${CMHG} ${CMHGFLAGS} -xh $@ cmhg.modhead
# To export bare files you can use the ${CP} command:
# ${EXP_LIB}.${COMPONENT}.h.myheader: h.myheader
#        ${CP} $?  $@  ${CPFLAGS}
${EXP_C_H}.${COMPONENT}: h.${COMPONENT}
        ${CP} $?  $@  ${CPFLAGS}

# This clean target removes any module header file that was built.
cleantarget:
           ${DESTROY} h.modhead

#---------------------------------------------------------------------------
# Dynamic dependencies:
